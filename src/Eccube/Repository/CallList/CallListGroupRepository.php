<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository\CallList;

use Customize\Entity\CallList\CallListGroup;
use Eccube\Entity\Member;
use Eccube\Repository\AbstractRepository;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * CallListGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CallListGroupRepository extends AbstractRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, CallListGroup::class);
    }

    public function getMyCallListGroups(Member $Member)
    {
        $qb = $this->createQueryBuilder('c')
            ->where('c.Member = :Member')
            ->setParameter('Member', $Member);

        $Groups = $qb
            ->getQuery()
            ->getResult();

        return $Groups;
    }

    // 当日のグループが生成されているか判定
    public function isGeneratedCallListAtToday(Member $Member) {
        $qb = $this->createQueryBuilder('g');
        // 当日のDateを取得
        $date = date('Y/m/d 00:00:00');
//        $qb->where('g.Member = :Member')
//            ->setParameter('Member', $Member);
        $qb->where('g.create_date >= :create_date')
            ->setParameter('create_date', $date);
        $query = $qb->getQuery()->getResult();
        return !empty($query);
    }

    public function getQueryBuilderBySearchData($searchData)
    {
        $qb = $this->createQueryBuilder('g')
            ->select('g');

        if (isset($searchData['role_id'])) {
            var_dump('role_id');
        }

        if (isset($searchData['Member'])) {
            $qb->andWhere('g.Member = :Member')
                ->setParameter('Member', $searchData['Member']);
        }

        if (isset($searchData['create_date'])) {
            $qb->andWhere('g.create_date = :create_date')
                ->setParameter('create_date', $searchData['create_date']);
        }

        $results = $qb->getQuery()->getResult();

        return $results;
    }
}
